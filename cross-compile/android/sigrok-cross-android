#!/bin/bash
##
## This file is part of the sigrok-util project.
##
## Copyright (C) 2013 Uwe Hermann <uwe@hermann-uwe.de>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA
##

set -e

# The path where your Android toolchain directory is located.
TOOLCHAIN=$HOME/android/android-arm-toolchain

# The path where the cross-compiled packages will be installed.
PREFIX=$HOME/sr_android

# The path where to download files to and where to build packages.
BUILDDIR=./sr_android_build

# You usually don't need to change anything below this line.

# -----------------------------------------------------------------------------

VER_LIBICONV=1.14
VER_GETTEXT=0.18.3
VER_ZLIB=1.2.8
VER_PCRE=8.33
VER_LIBFFI=3.0.13
VER_GLIB=2.34.3
VER_LIBZIP=0.11.1
VER_LIBUSB=0.1.12
VER_LIBFTDI=0.20
VER_LIBUSB_1_0=1.0.9

SF_MIRROR=switch.dl.sourceforge.net

# -----------------------------------------------------------------------------

# We need to find tools in the toolchain and in the install directory.
export PATH=$PREFIX/bin:$TOOLCHAIN/bin:$PATH

# Tell pkg-config to only look for our cross-built stuff.
export PKG_CONFIG_LIBDIR="$PREFIX/lib/pkgconfig"
export -n PKG_CONFIG_PATH

# Define some helper variables.
C="--host=arm-linux-androideabi --prefix=$PREFIX"

# Remember the directory we're in.
case "$0" in
  /*) TOP=$(dirname "$0");;
  *) TOP=$(dirname "$(pwd)"/"$0");;
esac

# Remove build directory contents (if any) and create a new build dir.
rm -rf $BUILDDIR
mkdir $BUILDDIR
cd $BUILDDIR

# Get the latest versions of config.guess/config.sub that know about Android.
git clone git://git.savannah.gnu.org/config.git

# -----------------------------------------------------------------------------

# libiconv (needed for glib)
wget http://ftp.gnu.org/pub/gnu/libiconv/libiconv-$VER_LIBICONV.tar.gz
tar xfz libiconv-$VER_LIBICONV.tar.gz
cd libiconv-$VER_LIBICONV
cp -f ../config/config.guess build-aux
cp -f ../config/config.sub build-aux
cp -f ../config/config.guess libcharset/build-aux
cp -f ../config/config.sub libcharset/build-aux
./configure $C --enable-shared
make lib/localcharset.h
cd libcharset
make
make install
cd ../lib
make
make install
cd ..
test -d $PREFIX/include || mkdir $PREFIX/include
cp include/iconv.h.inst $PREFIX/include/iconv.h
cd ..

# gettext (needed for glib)
wget http://ftp.gnu.org/pub/gnu/gettext/gettext-$VER_GETTEXT.tar.gz
tar xfz gettext-$VER_GETTEXT.tar.gz
cd gettext-$VER_GETTEXT
./configure $C --enable-shared --disable-libasprintf
cd gettext-runtime
make
make install
cd ../..

# zlib (needed for glib and libzip)
wget http://zlib.net/zlib-$VER_ZLIB.tar.gz
tar xfvz zlib-$VER_ZLIB.tar.gz
cd zlib-$VER_ZLIB
# Note: zlib's configure doesn't understand --host, we need to pass $CC.
CC=arm-linux-androideabi-gcc ./configure --prefix=$PREFIX
make
make install
cd ..

# pcre (needed for glib)
wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-$VER_PCRE.tar.gz
tar xfvz pcre-$VER_PCRE.tar.gz
cd pcre-$VER_PCRE
./configure $C --disable-cpp
make
make install
cd ..

# libffi (needed for glib)
wget ftp://sourceware.org/pub/libffi/libffi-$VER_LIBFFI.tar.gz
tar xfz libffi-$VER_LIBFFI.tar.gz
cd libffi-$VER_LIBFFI
./configure $C
make
make install
cd ..

# glib
wget https://github.com/djdeath/glib/archive/android.zip
unzip -q android.zip
cd glib-android
./autogen.sh
# Note: Manual LDFLAGS/CPPFLAGS needed for libiconv, rest uses pkg-config.
LDFLAGS=-L$PREFIX/lib CPPFLAGS=-I$PREFIX/include glib_cv_stack_grows=no glib_cv_uscore=no ac_cv_func_posix_getpwuid_r=no ac_cv_func_posix_getgrgid_r=no ./configure $C --disable-modular-tests
make
make install
cd ..

# libzip
wget http://www.nih.at/libzip/libzip-$VER_LIBZIP.tar.gz
tar xfz libzip-$VER_LIBZIP.tar.gz
cd libzip-$VER_LIBZIP
cp -f ../config/config.guess .
cp -f ../config/config.sub .
./configure $C
make
make install
cd ..

# libusb-0.1 (not used directly, but needed for libftdi)
wget http://$SF_MIRROR/project/libusb/libusb-0.1%20%28LEGACY%29/$VER_LIBUSB/libusb-$VER_LIBUSB.tar.gz
tar xfz libusb-$VER_LIBUSB.tar.gz
cd libusb-$VER_LIBUSB
cp -f ../config/config.guess .
cp -f ../config/config.sub .
./configure $C
# Explicitly exclude libusbpp.la from lib_LTLIBRARIES, and skip subdirs.
make lib_LTLIBRARIES=libusb.la SUBDIRS=.
make lib_LTLIBRARIES=libusb.la SUBDIRS=. install
cd ..

# libftdi
wget http://www.intra2net.com/en/developer/libftdi/download/libftdi-$VER_LIBFTDI.tar.gz
tar xfz libftdi-$VER_LIBFTDI.tar.gz
cd libftdi-$VER_LIBFTDI
cp -f ../config/config.guess .
cp -f ../config/config.sub .
./configure $C
make
make install
cd ..

# libusb-1.0
wget http://$SF_MIRROR/project/libusb/libusb-1.0/libusb-$VER_LIBUSB_1_0/libusb-$VER_LIBUSB_1_0.tar.bz2
tar xfj libusb-$VER_LIBUSB_1_0.tar.bz2
cd libusb-$VER_LIBUSB_1_0
patch -p1 < $TOP/libusb-1.0.patch
./configure $C
make
make install
cd ..

# libsigrok
git clone git://sigrok.org/libsigrok
cd libsigrok
./autogen.sh
./configure $C --disable-alsa
make
make install
cd ..

